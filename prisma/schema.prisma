// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(cuid())
  name               String?
  email              String   @unique
  password           String
  role               String?  @default("user")
  avatar_url         String?
  subscription_level Int?     @default(0)
  isActive           Boolean  @default(false)
  activationToken    String?  @unique
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Book {
  id                 Int      @id @default(autoincrement())
  title              String?  @unique
  author             String?
  description        String?
  file_url           String?
  processed          Boolean  @default(false)
  processed_dir      String?
  error_message      String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  pages              BookPage[]
  categories         BookCategory[]
}

model BookPage {
  id                 Int      @id @default(autoincrement())
  book_id            Int
  page_number        Int
  image_url          String?
  text               String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  book               Book     @relation(fields: [book_id], references: [id], onDelete: Cascade)
}

model Category {
  id                 Int      @id @default(autoincrement())
  name               String?  @unique
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  books              BookCategory[]
}

model BookCategory {
  id                 Int      @id @default(autoincrement())
  book_id            Int
  category_id        Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  book               Book     @relation(fields: [book_id], references: [id], onDelete: Cascade)
  category           Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
}